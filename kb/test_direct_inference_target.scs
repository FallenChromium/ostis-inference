@link0 = [Все стороны квадрата равны друг другу и все его углы - прямые];;
nrel_side <- sc_node_norole_relation;;
concept_quadrangle <- sc_node_class;;
_x <- sc_node;;
_a <- sc_node;;
_c <- sc_node;;
concept_segment <- sc_node_class;;
_b <- sc_node;;
_d <- sc_node;;
concept_right_angle <- sc_node_class;;
_angle1 <- sc_node;;
_angle4 <- sc_node;;
_b <- sc_node;;
_angle2 <- sc_node;;
_c <- sc_node;;
.._node0 <- sc_node_class;;
_a <- sc_node;;
concept_length <- sc_node_class;;
nrel_angle <- sc_node_norole_relation;;
_angle3 <- sc_node;;
_x <- sc_node;;
nrel_side <- sc_node_norole_relation;;
concept_square <- sc_node_class;;
_d <- sc_node;;
_y <- sc_node;;
concept_rhombus <- sc_node_class;;
_x <- sc_node;;
concept_quadrangle <- sc_node_class;;
concept_square <- sc_node_class;;
rrel_1 <- sc_node_role_relation;;
action_direct_inference_test <- sc_node;;
action_direct_inference -> action_direct_inference_test;;

@link0 <- sc_link;;
@test_direct_inference_target = [*
	@pair28 = (current_node_class _-> _x);;
	@pair29 = (target_node_class _-> _x);;
*];;

target_node_class <- sc_node_class;;
current_node_class <- sc_node_class;;
class_which_must_not_include_the_node <- sc_node_class;;
class_1_which_may_not_include_the_node <- sc_node_class;;
class_2_which_may_not_include_the_node <- sc_node_class;;

not = [*
    class_which_must_not_include_the_node _-> _res;;
    current_node_class _-> _res;;
*];;

or_1 = [*
    class_1_which_may_not_include_the_node _-> _res;;
    current_node_class _-> _res;;
*];;

or_2 = [*
    class_2_which_may_not_include_the_node _-> _res;;
    current_node_class _-> _res;;
*];;

then = [*
    current_node_class _-> _res;;
    target_node_class _-> _res;;
*];;
@p1 = (conj_link => then);;
@p1 <- nrel_implication;;
@p2 = (statement_yp_6_test -> @p1);;
@p2 <- rrel_main_key_sc_element;;
statement_yp_6_test <- statement;;
conj_link <- nrel_conjunction;;
conj_link -> not_link;;
nrel_negation -> not_link;;
not_link -> not;;
conj_link -> disj_link;;
disj_link <- nrel_disjunction;;
disj_link -> or_1;;
disj_link -> or_2;;

atomic_logical_formula
 -> not;
 -> or_1;
 -> or_2;
 -> then;;
the_yp_6_node <- current_node_class;;
the_yp_6_node <- class_1_which_may_not_include_the_node;;

concept_square -> ABCD;;

action_direct_inference <- sc_node_class;;

rrel_success_solution <- sc_node_norole_relation;;

action_direct_inference_test
  -> rrel_1: @test_direct_inference_target;
  -> rrel_2: ... (*
    -> rrel_1: {
      statement_square_is_rhombus;
      statement_rhombus_is_quadrangle;
      statement_rhombus_all_sides;
      statement_square_is_rectangle;
      statement_rectangle_is_quadrangle;
      statement_rectangle_all_angles;
      statement_quadrangle_sides;
      statement_quadrangle_angles;
      statement_square_is_quadrangle
    };;
  *);
  -> rrel_3: { ABCD };;

yp_6_action_direct_inference_test
    <- action_direct_inference;
    -> rrel_1: @test_direct_inference_target;
    -> rrel_2:
        {
            statement_yp_6_test
        };
    -> rrel_3: { the_yp_6_node };;