concept_square -> ABCD;;
concept_square -> A1B1C1D1;;

question_direct_inference_test
  -> rrel_1: test_direct_inference_target;
  -> rrel_2:
  	{
  		statement_square_is_rhombus;
  		statement_rhombus_is_quadrangle;
  		statement_rhombus_all_sides;
  		statement_square_is_rectangle;
  		statement_rectangle_is_quadrangle;
  		statement_rectangle_all_angles;
  		statement_quadrangle_sides;
  		statement_quadrangle_angles;
  		statement_square_is_quadrangle
  	};
  -> rrel_3: { ABCD };;

question_direct_inference_multiple_rule_usage_and_multiple_arguments_test
  -> rrel_1: test_direct_inference_multiple_rule_usage_and_multiple_arguments_target;
  -> rrel_2:
  	{
  		statement_square_is_rhombus;
		statement_rhombus_is_quadrangle_two_arguments
  	};
  -> rrel_3:
	{
 		ABCD;
		A1B1C1D1
	};;


concept_quadrangle -> quadrangle1;;

question_simple_direct_inference_test
  -> rrel_1: test_simple_direct_inference_target;
  -> rrel_2:
  	{
  		statement_quadrangle_sides
  	};
  -> rrel_3:
	{
 		quadrangle1
	};;

//scs tests

concept_rhombus <-sc_node_not_relation;;
concept_square <-sc_node_not_relation;;

concept_square -> A2B2C2D2;;

statement_square_is_rhombus_scs
	<= ... (*
		<- sc_node_tuple;;
		-> [Все квадраты - ромбы] (* <- lang_ru;; *);;
	*);
	-> rrel_key_sc_element:
		concept_square;
		concept_rhombus;
	-> rrel_main_key_sc_element: (if_statement => else_statement) (* <- nrel_implication;; *);;
	
if_statement = [*
	concept_square _-> _x;;
*];;

else_statement = [*
	concept_rhombus _-> _x;;
*];;

atomic_logical_formula
	-> if_statement;
	-> else_statement;;

test_direct_inference_scs_target = [*
	concept_rhombus _-> _x;;
*];;

question_direct_inference_scs_test
  -> rrel_1: test_direct_inference_scs_target;
  -> rrel_2:
  	{
  		statement_square_is_rhombus_scs
  	};
  -> rrel_3:
	{
 		A2B2C2D2
	};;

